{
  "name": "Agentic PR Test",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ JSON.stringify($json.output) }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a helpful manual tester that needs to make sure the pull request can be merged by performing a set of functional tests.\n\nYou mission is:\n\n- You will first retrieve the preview environment on Vercel via the comments on  {{ $json.output[\"pull-request-comments-url\"] }} its part of the [Visit preview] and ends with `.vercel.app`\n\n- You can use tools from Airtop to validate all testcases. Below is a set of how to best use these tools.\n\n- Do not test any other test not mentioned within the testcases.\n\n- Make sure to output if the tests were a success and provide a detailed description of the run. What was executed and what was validated upon.\n\nHow to use Airtop tools:\n\n## Start the browser\nYou should always start by using the `Start browser` tool to get the `sessionId` and `windowId` required by other tools.\n\n## Use the `Query` tool\nYou don't have access to the browser screen but you can call the `Query` tool to get knowladge and hints of the current browser window. This tool accepts queries in natural language and can output information in plain text, markdown or JSON.\n\n## Use the `Click` tool\nUse the `Click` tool to click on an element on the web page. Describe the element in details in the \"Element Description\" field, Be specific and refer to elements that are on the page. \n\n## Use the `Type` tool\nUse the `Type` tool to type in text boxes. Describe the text box in \"Element Description\" field and the text to type in the \"Text\" field. The 'Type' tool is clicking Enter after typing the text so don't send [ENTER] commandes.\n\n### Examples for how to use the `Query` tool\n- Ask something about the current page:\n  \"Is the user logged in? Answer with Yes or No\"\n- Retrieve information:\n  \"Extract all the posts in the page, include the title and copy, output in JSON format\"\n- Get hints on the UI:\n  \"Is there a link to the contact form? If yes, describe the element in detail\"\n\n## Important\n- Start by calling `Start browser` to begin using the browser and provide the initial URL\n- Call `End session` with the `sessionId` once you have finished using the browser",
          "maxIterations": 35
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1840,
        200
      ],
      "id": "1c5f1850-5bd8-4941-aad2-1f53c5ff7f3b",
      "name": "Browser Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a helpful ISTQB certified assistant that creates a set of test cases that need to be tested in a later stage by a different AI agent.\n\nYou can make HTTP requests to retrieve the file diffs of the pull request via {{ $json.user_message.diff_url }}\n\nYou can gather both the issue number of the pull request: {{ $json.user_message.number }} And if a issue is mentioned within the commit message ({{ $json.user_message.title }}) or comment also retrieve the issue number which is related to the PR.\n\nYour mission:\n\n- Review the proposed code changes file by file and by significant modification.\n\n- Come up with a list of test cases based on the functionalities of the pull request and the the related issue within GitHub.\n\n- Use the GitHub issue tool to get the contents of the SCRUM issue. Which contains acceptance criteria to base the test cases on.\n\n- Only output the test cases to perform. A different AI agent will use the browser to perform these testcases at a later stage. Make sure the output is detailed enough so the next agent knows what to do and where to assess / validate on.\n\n- Don't make up any testcases for functionality which is not directly touched, or not mentioned as acceptance criteria.\n\n- If the code changes are not functional. e.g. but only a change in readme, external files, comments (also ignore comments in js or html files etc.), tests etc. Output that `needs-testing` is false.\n\n- If `needs-testing` is true it should always contain some test cases."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        540,
        200
      ],
      "id": "377f4cee-ecc5-4208-abf6-72fe1554abc6",
      "name": "Testplan Agent"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "owner": {
          "__rl": true,
          "value": "grvermeulen",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "CCS-demo",
          "mode": "name"
        },
        "events": [
          "pull_request"
        ],
        "options": {}
      },
      "type": "n8n-nodes-base.githubTrigger",
      "typeVersion": 1,
      "position": [
        0,
        400
      ],
      "id": "639831ba-e366-4464-80bc-af93e113efb0",
      "name": "Github Trigger",
      "webhookId": "f02079a7-2d87-4c21-b85d-3af539244853",
      "credentials": {
        "githubOAuth2Api": {
          "id": "6F53O8Zf3hJZijLr",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Makes a HTTP request and returns the contents",
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        560,
        420
      ],
      "id": "be98867f-9334-41d6-b7ce-492e616cbabc",
      "name": "HTTP Request File Diffs",
      "credentials": {
        "githubApi": {
          "id": "VJEChOvTBu3ZTcFJ",
          "name": "GitHub account 3"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -440,
        100
      ],
      "id": "e85c1623-526c-4f15-8fbf-01edd5d2b0fd",
      "name": "GitHub Trigger Mock"
    },
    {
      "parameters": {
        "jsCode": "// Get the input item\nconst item = $input.first().json;\n\n// Extract the pull_request object\nconst pull_request = item.body.pull_request;\n\nif (!pull_request) {\n  return [\n    {\n      json: {\n        error: 'pull_request not found'\n      }\n    }\n  ];\n}\n\n// Compose a full prompt string for the agent\nconst chatInput = `\nYou are a helpful ISTQB certified assistant that creates a set of test cases that need to be tested in a later stage by a different AI agent.\n\nUse the following Pull Request information:\n- PR Title: ${pull_request.title}\n- PR Number: ${pull_request.number}\n- PR Diff: Retrieve the diff from this API URL (Accept: application/vnd.github.v3.diff): ${pull_request.url}\n`;\n\n// Return in expected format\nreturn [\n  {\n    json: {\n      chatInput: chatInput.trim()\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        200
      ],
      "id": "4d6a8b65-5e87-4d4a-a297-9bb830b4c360",
      "name": "Prepare Testplan Agent Input"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get mentioned related Scrum issue from commit title",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "grvermeulen",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "CCS-demo",
          "mode": "name"
        },
        "issueNumber": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Issue_Number', ``, 'number') }}"
      },
      "type": "n8n-nodes-base.githubTool",
      "typeVersion": 1.1,
      "position": [
        680,
        420
      ],
      "id": "8650a6e1-2410-45e1-90af-90b18e905290",
      "name": "Get Issue",
      "webhookId": "3301c2fc-e9a1-4bef-84de-f4bcaab27b10",
      "credentials": {
        "githubApi": {
          "id": "VJEChOvTBu3ZTcFJ",
          "name": "GitHub account 3"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b62a9f96-dc75-4d62-acb8-b0e5e2699f48",
              "leftValue": "={{ $json.output[\"needs-testing\"] }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1000,
        200
      ],
      "id": "a462ceb3-5b65-40b3-831a-6e580091609e",
      "name": "Needs testing?"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    \"body\": {\n      \"action\": \"opened\",\n      \"number\": 3,\n      \"pull_request\": {\n        \"url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls/3\",\n        \"id\": 2664386707,\n        \"node_id\": \"PR_kwDOPL5ai86ez1CT\",\n        \"html_url\": \"https://github.com/grvermeulen/CCS-Demo/pull/3\",\n        \"diff_url\": \"https://github.com/grvermeulen/CCS-Demo/pull/3.diff\",\n        \"patch_url\": \"https://github.com/grvermeulen/CCS-Demo/pull/3.patch\",\n        \"issue_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues/3\",\n        \"number\": 3,\n        \"state\": \"open\",\n        \"locked\": false,\n        \"title\": \"feat: add Personalized Fruit Subscription Service\",\n        \"user\": {\n          \"login\": \"grvermeulen\",\n          \"id\": 15326434,\n          \"node_id\": \"MDQ6VXNlcjE1MzI2NDM0\",\n          \"avatar_url\": \"https://avatars.githubusercontent.com/u/15326434?v=4\",\n          \"gravatar_id\": \"\",\n          \"url\": \"https://api.github.com/users/grvermeulen\",\n          \"html_url\": \"https://github.com/grvermeulen\",\n          \"followers_url\": \"https://api.github.com/users/grvermeulen/followers\",\n          \"following_url\": \"https://api.github.com/users/grvermeulen/following{/other_user}\",\n          \"gists_url\": \"https://api.github.com/users/grvermeulen/gists{/gist_id}\",\n          \"starred_url\": \"https://api.github.com/users/grvermeulen/starred{/owner}{/repo}\",\n          \"subscriptions_url\": \"https://api.github.com/users/grvermeulen/subscriptions\",\n          \"organizations_url\": \"https://api.github.com/users/grvermeulen/orgs\",\n          \"repos_url\": \"https://api.github.com/users/grvermeulen/repos\",\n          \"events_url\": \"https://api.github.com/users/grvermeulen/events{/privacy}\",\n          \"received_events_url\": \"https://api.github.com/users/grvermeulen/received_events\",\n          \"type\": \"User\",\n          \"user_view_type\": \"public\",\n          \"site_admin\": false\n        },\n        \"body\": \"This PR introduces a new subscription page where users can personalize their fruit box, select delivery frequency, and save their subscription. The navigation menu is updated to include a link to the subscription service.\",\n        \"created_at\": \"2025-07-14T14:02:39Z\",\n        \"updated_at\": \"2025-07-14T14:02:39Z\",\n        \"closed_at\": null,\n        \"merged_at\": null,\n        \"merge_commit_sha\": null,\n        \"assignee\": null,\n        \"assignees\": [],\n        \"requested_reviewers\": [],\n        \"requested_teams\": [],\n        \"labels\": [],\n        \"milestone\": null,\n        \"draft\": false,\n        \"commits_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls/3/commits\",\n        \"review_comments_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls/3/comments\",\n        \"review_comment_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls/comments{/number}\",\n        \"comments_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues/3/comments\",\n        \"statuses_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/statuses/e09241a3c4d6096514ac4c3d38e8be98b542f68a\",\n        \"head\": {\n          \"label\": \"grvermeulen:feat/subscription-service\",\n          \"ref\": \"feat/subscription-service\",\n          \"sha\": \"e09241a3c4d6096514ac4c3d38e8be98b542f68a\",\n          \"user\": {\n            \"login\": \"grvermeulen\",\n            \"id\": 15326434,\n            \"node_id\": \"MDQ6VXNlcjE1MzI2NDM0\",\n            \"avatar_url\": \"https://avatars.githubusercontent.com/u/15326434?v=4\",\n            \"gravatar_id\": \"\",\n            \"url\": \"https://api.github.com/users/grvermeulen\",\n            \"html_url\": \"https://github.com/grvermeulen\",\n            \"followers_url\": \"https://api.github.com/users/grvermeulen/followers\",\n            \"following_url\": \"https://api.github.com/users/grvermeulen/following{/other_user}\",\n            \"gists_url\": \"https://api.github.com/users/grvermeulen/gists{/gist_id}\",\n            \"starred_url\": \"https://api.github.com/users/grvermeulen/starred{/owner}{/repo}\",\n            \"subscriptions_url\": \"https://api.github.com/users/grvermeulen/subscriptions\",\n            \"organizations_url\": \"https://api.github.com/users/grvermeulen/orgs\",\n            \"repos_url\": \"https://api.github.com/users/grvermeulen/repos\",\n            \"events_url\": \"https://api.github.com/users/grvermeulen/events{/privacy}\",\n            \"received_events_url\": \"https://api.github.com/users/grvermeulen/received_events\",\n            \"type\": \"User\",\n            \"user_view_type\": \"public\",\n            \"site_admin\": false\n          },\n          \"repo\": {\n            \"id\": 1019107979,\n            \"node_id\": \"R_kgDOPL5aiw\",\n            \"name\": \"CCS-Demo\",\n            \"full_name\": \"grvermeulen/CCS-Demo\",\n            \"private\": true,\n            \"owner\": {\n              \"login\": \"grvermeulen\",\n              \"id\": 15326434,\n              \"node_id\": \"MDQ6VXNlcjE1MzI2NDM0\",\n              \"avatar_url\": \"https://avatars.githubusercontent.com/u/15326434?v=4\",\n              \"gravatar_id\": \"\",\n              \"url\": \"https://api.github.com/users/grvermeulen\",\n              \"html_url\": \"https://github.com/grvermeulen\",\n              \"followers_url\": \"https://api.github.com/users/grvermeulen/followers\",\n              \"following_url\": \"https://api.github.com/users/grvermeulen/following{/other_user}\",\n              \"gists_url\": \"https://api.github.com/users/grvermeulen/gists{/gist_id}\",\n              \"starred_url\": \"https://api.github.com/users/grvermeulen/starred{/owner}{/repo}\",\n              \"subscriptions_url\": \"https://api.github.com/users/grvermeulen/subscriptions\",\n              \"organizations_url\": \"https://api.github.com/users/grvermeulen/orgs\",\n              \"repos_url\": \"https://api.github.com/users/grvermeulen/repos\",\n              \"events_url\": \"https://api.github.com/users/grvermeulen/events{/privacy}\",\n              \"received_events_url\": \"https://api.github.com/users/grvermeulen/received_events\",\n              \"type\": \"User\",\n              \"user_view_type\": \"public\",\n              \"site_admin\": false\n            },\n            \"html_url\": \"https://github.com/grvermeulen/CCS-Demo\",\n            \"description\": \"CCS-Demo\",\n            \"fork\": false,\n            \"url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo\",\n            \"forks_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/forks\",\n            \"keys_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/keys{/key_id}\",\n            \"collaborators_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/collaborators{/collaborator}\",\n            \"teams_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/teams\",\n            \"hooks_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/hooks\",\n            \"issue_events_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues/events{/number}\",\n            \"events_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/events\",\n            \"assignees_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/assignees{/user}\",\n            \"branches_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/branches{/branch}\",\n            \"tags_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/tags\",\n            \"blobs_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/blobs{/sha}\",\n            \"git_tags_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/tags{/sha}\",\n            \"git_refs_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/refs{/sha}\",\n            \"trees_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/trees{/sha}\",\n            \"statuses_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/statuses/{sha}\",\n            \"languages_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/languages\",\n            \"stargazers_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/stargazers\",\n            \"contributors_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/contributors\",\n            \"subscribers_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/subscribers\",\n            \"subscription_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/subscription\",\n            \"commits_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/commits{/sha}\",\n            \"git_commits_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/commits{/sha}\",\n            \"comments_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/comments{/number}\",\n            \"issue_comment_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues/comments{/number}\",\n            \"contents_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/contents/{+path}\",\n            \"compare_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/compare/{base}...{head}\",\n            \"merges_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/merges\",\n            \"archive_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/{archive_format}{/ref}\",\n            \"downloads_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/downloads\",\n            \"issues_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues{/number}\",\n            \"pulls_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls{/number}\",\n            \"milestones_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/milestones{/number}\",\n            \"notifications_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/notifications{?since,all,participating}\",\n            \"labels_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/labels{/name}\",\n            \"releases_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/releases{/id}\",\n            \"deployments_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/deployments\",\n            \"created_at\": \"2025-07-13T18:50:04Z\",\n            \"updated_at\": \"2025-07-14T13:08:16Z\",\n            \"pushed_at\": \"2025-07-14T14:00:20Z\",\n            \"git_url\": \"git://github.com/grvermeulen/CCS-Demo.git\",\n            \"ssh_url\": \"git@github.com:grvermeulen/CCS-Demo.git\",\n            \"clone_url\": \"https://github.com/grvermeulen/CCS-Demo.git\",\n            \"svn_url\": \"https://github.com/grvermeulen/CCS-Demo\",\n            \"homepage\": null,\n            \"size\": 581,\n            \"stargazers_count\": 0,\n            \"watchers_count\": 0,\n            \"language\": \"HTML\",\n            \"has_issues\": true,\n            \"has_projects\": true,\n            \"has_downloads\": true,\n            \"has_wiki\": false,\n            \"has_pages\": false,\n            \"has_discussions\": false,\n            \"forks_count\": 0,\n            \"mirror_url\": null,\n            \"archived\": false,\n            \"disabled\": false,\n            \"open_issues_count\": 2,\n            \"license\": null,\n            \"allow_forking\": true,\n            \"is_template\": false,\n            \"web_commit_signoff_required\": false,\n            \"topics\": [],\n            \"visibility\": \"private\",\n            \"forks\": 0,\n            \"open_issues\": 2,\n            \"watchers\": 0,\n            \"default_branch\": \"main\",\n            \"allow_squash_merge\": true,\n            \"allow_merge_commit\": true,\n            \"allow_rebase_merge\": true,\n            \"allow_auto_merge\": false,\n            \"delete_branch_on_merge\": false,\n            \"allow_update_branch\": false,\n            \"use_squash_pr_title_as_default\": false,\n            \"squash_merge_commit_message\": \"COMMIT_MESSAGES\",\n            \"squash_merge_commit_title\": \"COMMIT_OR_PR_TITLE\",\n            \"merge_commit_message\": \"PR_TITLE\",\n            \"merge_commit_title\": \"MERGE_MESSAGE\"\n          }\n        },\n        \"base\": {\n          \"label\": \"grvermeulen:main\",\n          \"ref\": \"main\",\n          \"sha\": \"e74db62784faad281c18e3a812b883169bd4b98a\",\n          \"user\": {\n            \"login\": \"grvermeulen\",\n            \"id\": 15326434,\n            \"node_id\": \"MDQ6VXNlcjE1MzI2NDM0\",\n            \"avatar_url\": \"https://avatars.githubusercontent.com/u/15326434?v=4\",\n            \"gravatar_id\": \"\",\n            \"url\": \"https://api.github.com/users/grvermeulen\",\n            \"html_url\": \"https://github.com/grvermeulen\",\n            \"followers_url\": \"https://api.github.com/users/grvermeulen/followers\",\n            \"following_url\": \"https://api.github.com/users/grvermeulen/following{/other_user}\",\n            \"gists_url\": \"https://api.github.com/users/grvermeulen/gists{/gist_id}\",\n            \"starred_url\": \"https://api.github.com/users/grvermeulen/starred{/owner}{/repo}\",\n            \"subscriptions_url\": \"https://api.github.com/users/grvermeulen/subscriptions\",\n            \"organizations_url\": \"https://api.github.com/users/grvermeulen/orgs\",\n            \"repos_url\": \"https://api.github.com/users/grvermeulen/repos\",\n            \"events_url\": \"https://api.github.com/users/grvermeulen/events{/privacy}\",\n            \"received_events_url\": \"https://api.github.com/users/grvermeulen/received_events\",\n            \"type\": \"User\",\n            \"user_view_type\": \"public\",\n            \"site_admin\": false\n          },\n          \"repo\": {\n            \"id\": 1019107979,\n            \"node_id\": \"R_kgDOPL5aiw\",\n            \"name\": \"CCS-Demo\",\n            \"full_name\": \"grvermeulen/CCS-Demo\",\n            \"private\": true,\n            \"owner\": {\n              \"login\": \"grvermeulen\",\n              \"id\": 15326434,\n              \"node_id\": \"MDQ6VXNlcjE1MzI2NDM0\",\n              \"avatar_url\": \"https://avatars.githubusercontent.com/u/15326434?v=4\",\n              \"gravatar_id\": \"\",\n              \"url\": \"https://api.github.com/users/grvermeulen\",\n              \"html_url\": \"https://github.com/grvermeulen\",\n              \"followers_url\": \"https://api.github.com/users/grvermeulen/followers\",\n              \"following_url\": \"https://api.github.com/users/grvermeulen/following{/other_user}\",\n              \"gists_url\": \"https://api.github.com/users/grvermeulen/gists{/gist_id}\",\n              \"starred_url\": \"https://api.github.com/users/grvermeulen/starred{/owner}{/repo}\",\n              \"subscriptions_url\": \"https://api.github.com/users/grvermeulen/subscriptions\",\n              \"organizations_url\": \"https://api.github.com/users/grvermeulen/orgs\",\n              \"repos_url\": \"https://api.github.com/users/grvermeulen/repos\",\n              \"events_url\": \"https://api.github.com/users/grvermeulen/events{/privacy}\",\n              \"received_events_url\": \"https://api.github.com/users/grvermeulen/received_events\",\n              \"type\": \"User\",\n              \"user_view_type\": \"public\",\n              \"site_admin\": false\n            },\n            \"html_url\": \"https://github.com/grvermeulen/CCS-Demo\",\n            \"description\": \"CCS-Demo\",\n            \"fork\": false,\n            \"url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo\",\n            \"forks_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/forks\",\n            \"keys_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/keys{/key_id}\",\n            \"collaborators_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/collaborators{/collaborator}\",\n            \"teams_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/teams\",\n            \"hooks_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/hooks\",\n            \"issue_events_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues/events{/number}\",\n            \"events_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/events\",\n            \"assignees_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/assignees{/user}\",\n            \"branches_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/branches{/branch}\",\n            \"tags_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/tags\",\n            \"blobs_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/blobs{/sha}\",\n            \"git_tags_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/tags{/sha}\",\n            \"git_refs_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/refs{/sha}\",\n            \"trees_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/trees{/sha}\",\n            \"statuses_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/statuses/{sha}\",\n            \"languages_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/languages\",\n            \"stargazers_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/stargazers\",\n            \"contributors_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/contributors\",\n            \"subscribers_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/subscribers\",\n            \"subscription_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/subscription\",\n            \"commits_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/commits{/sha}\",\n            \"git_commits_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/commits{/sha}\",\n            \"comments_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/comments{/number}\",\n            \"issue_comment_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues/comments{/number}\",\n            \"contents_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/contents/{+path}\",\n            \"compare_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/compare/{base}...{head}\",\n            \"merges_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/merges\",\n            \"archive_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/{archive_format}{/ref}\",\n            \"downloads_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/downloads\",\n            \"issues_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues{/number}\",\n            \"pulls_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls{/number}\",\n            \"milestones_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/milestones{/number}\",\n            \"notifications_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/notifications{?since,all,participating}\",\n            \"labels_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/labels{/name}\",\n            \"releases_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/releases{/id}\",\n            \"deployments_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/deployments\",\n            \"created_at\": \"2025-07-13T18:50:04Z\",\n            \"updated_at\": \"2025-07-14T13:08:16Z\",\n            \"pushed_at\": \"2025-07-14T14:00:20Z\",\n            \"git_url\": \"git://github.com/grvermeulen/CCS-Demo.git\",\n            \"ssh_url\": \"git@github.com:grvermeulen/CCS-Demo.git\",\n            \"clone_url\": \"https://github.com/grvermeulen/CCS-Demo.git\",\n            \"svn_url\": \"https://github.com/grvermeulen/CCS-Demo\",\n            \"homepage\": null,\n            \"size\": 581,\n            \"stargazers_count\": 0,\n            \"watchers_count\": 0,\n            \"language\": \"HTML\",\n            \"has_issues\": true,\n            \"has_projects\": true,\n            \"has_downloads\": true,\n            \"has_wiki\": false,\n            \"has_pages\": false,\n            \"has_discussions\": false,\n            \"forks_count\": 0,\n            \"mirror_url\": null,\n            \"archived\": false,\n            \"disabled\": false,\n            \"open_issues_count\": 2,\n            \"license\": null,\n            \"allow_forking\": true,\n            \"is_template\": false,\n            \"web_commit_signoff_required\": false,\n            \"topics\": [],\n            \"visibility\": \"private\",\n            \"forks\": 0,\n            \"open_issues\": 2,\n            \"watchers\": 0,\n            \"default_branch\": \"main\",\n            \"allow_squash_merge\": true,\n            \"allow_merge_commit\": true,\n            \"allow_rebase_merge\": true,\n            \"allow_auto_merge\": false,\n            \"delete_branch_on_merge\": false,\n            \"allow_update_branch\": false,\n            \"use_squash_pr_title_as_default\": false,\n            \"squash_merge_commit_message\": \"COMMIT_MESSAGES\",\n            \"squash_merge_commit_title\": \"COMMIT_OR_PR_TITLE\",\n            \"merge_commit_message\": \"PR_TITLE\",\n            \"merge_commit_title\": \"MERGE_MESSAGE\"\n          }\n        },\n        \"_links\": {\n          \"self\": {\n            \"href\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls/3\"\n          },\n          \"html\": {\n            \"href\": \"https://github.com/grvermeulen/CCS-Demo/pull/3\"\n          },\n          \"issue\": {\n            \"href\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues/3\"\n          },\n          \"comments\": {\n            \"href\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues/3/comments\"\n          },\n          \"review_comments\": {\n            \"href\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls/3/comments\"\n          },\n          \"review_comment\": {\n            \"href\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls/comments{/number}\"\n          },\n          \"commits\": {\n            \"href\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls/3/commits\"\n          },\n          \"statuses\": {\n            \"href\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/statuses/e09241a3c4d6096514ac4c3d38e8be98b542f68a\"\n          }\n        },\n        \"author_association\": \"OWNER\",\n        \"auto_merge\": null,\n        \"active_lock_reason\": null,\n        \"merged\": false,\n        \"mergeable\": null,\n        \"rebaseable\": null,\n        \"mergeable_state\": \"unknown\",\n        \"merged_by\": null,\n        \"comments\": 0,\n        \"review_comments\": 0,\n        \"maintainer_can_modify\": false,\n        \"commits\": 1,\n        \"additions\": 175,\n        \"deletions\": 0,\n        \"changed_files\": 9\n      },\n      \"repository\": {\n        \"id\": 1019107979,\n        \"node_id\": \"R_kgDOPL5aiw\",\n        \"name\": \"CCS-Demo\",\n        \"full_name\": \"grvermeulen/CCS-Demo\",\n        \"private\": true,\n        \"owner\": {\n          \"login\": \"grvermeulen\",\n          \"id\": 15326434,\n          \"node_id\": \"MDQ6VXNlcjE1MzI2NDM0\",\n          \"avatar_url\": \"https://avatars.githubusercontent.com/u/15326434?v=4\",\n          \"gravatar_id\": \"\",\n          \"url\": \"https://api.github.com/users/grvermeulen\",\n          \"html_url\": \"https://github.com/grvermeulen\",\n          \"followers_url\": \"https://api.github.com/users/grvermeulen/followers\",\n          \"following_url\": \"https://api.github.com/users/grvermeulen/following{/other_user}\",\n          \"gists_url\": \"https://api.github.com/users/grvermeulen/gists{/gist_id}\",\n          \"starred_url\": \"https://api.github.com/users/grvermeulen/starred{/owner}{/repo}\",\n          \"subscriptions_url\": \"https://api.github.com/users/grvermeulen/subscriptions\",\n          \"organizations_url\": \"https://api.github.com/users/grvermeulen/orgs\",\n          \"repos_url\": \"https://api.github.com/users/grvermeulen/repos\",\n          \"events_url\": \"https://api.github.com/users/grvermeulen/events{/privacy}\",\n          \"received_events_url\": \"https://api.github.com/users/grvermeulen/received_events\",\n          \"type\": \"User\",\n          \"user_view_type\": \"public\",\n          \"site_admin\": false\n        },\n        \"html_url\": \"https://github.com/grvermeulen/CCS-Demo\",\n        \"description\": \"CCS-Demo\",\n        \"fork\": false,\n        \"url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo\",\n        \"forks_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/forks\",\n        \"keys_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/keys{/key_id}\",\n        \"collaborators_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/collaborators{/collaborator}\",\n        \"teams_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/teams\",\n        \"hooks_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/hooks\",\n        \"issue_events_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues/events{/number}\",\n        \"events_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/events\",\n        \"assignees_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/assignees{/user}\",\n        \"branches_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/branches{/branch}\",\n        \"tags_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/tags\",\n        \"blobs_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/blobs{/sha}\",\n        \"git_tags_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/tags{/sha}\",\n        \"git_refs_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/refs{/sha}\",\n        \"trees_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/trees{/sha}\",\n        \"statuses_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/statuses/{sha}\",\n        \"languages_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/languages\",\n        \"stargazers_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/stargazers\",\n        \"contributors_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/contributors\",\n        \"subscribers_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/subscribers\",\n        \"subscription_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/subscription\",\n        \"commits_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/commits{/sha}\",\n        \"git_commits_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/git/commits{/sha}\",\n        \"comments_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/comments{/number}\",\n        \"issue_comment_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues/comments{/number}\",\n        \"contents_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/contents/{+path}\",\n        \"compare_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/compare/{base}...{head}\",\n        \"merges_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/merges\",\n        \"archive_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/{archive_format}{/ref}\",\n        \"downloads_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/downloads\",\n        \"issues_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/issues{/number}\",\n        \"pulls_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/pulls{/number}\",\n        \"milestones_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/milestones{/number}\",\n        \"notifications_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/notifications{?since,all,participating}\",\n        \"labels_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/labels{/name}\",\n        \"releases_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/releases{/id}\",\n        \"deployments_url\": \"https://api.github.com/repos/grvermeulen/CCS-Demo/deployments\",\n        \"created_at\": \"2025-07-13T18:50:04Z\",\n        \"updated_at\": \"2025-07-14T13:08:16Z\",\n        \"pushed_at\": \"2025-07-14T14:00:20Z\",\n        \"git_url\": \"git://github.com/grvermeulen/CCS-Demo.git\",\n        \"ssh_url\": \"git@github.com:grvermeulen/CCS-Demo.git\",\n        \"clone_url\": \"https://github.com/grvermeulen/CCS-Demo.git\",\n        \"svn_url\": \"https://github.com/grvermeulen/CCS-Demo\",\n        \"homepage\": null,\n        \"size\": 581,\n        \"stargazers_count\": 0,\n        \"watchers_count\": 0,\n        \"language\": \"HTML\",\n        \"has_issues\": true,\n        \"has_projects\": true,\n        \"has_downloads\": true,\n        \"has_wiki\": false,\n        \"has_pages\": false,\n        \"has_discussions\": false,\n        \"forks_count\": 0,\n        \"mirror_url\": null,\n        \"archived\": false,\n        \"disabled\": false,\n        \"open_issues_count\": 2,\n        \"license\": null,\n        \"allow_forking\": true,\n        \"is_template\": false,\n        \"web_commit_signoff_required\": false,\n        \"topics\": [],\n        \"visibility\": \"private\",\n        \"forks\": 0,\n        \"open_issues\": 2,\n        \"watchers\": 0,\n        \"default_branch\": \"main\"\n      },\n      \"sender\": {\n        \"login\": \"grvermeulen\",\n        \"id\": 15326434,\n        \"node_id\": \"MDQ6VXNlcjE1MzI2NDM0\",\n        \"avatar_url\": \"https://avatars.githubusercontent.com/u/15326434?v=4\",\n        \"gravatar_id\": \"\",\n        \"url\": \"https://api.github.com/users/grvermeulen\",\n        \"html_url\": \"https://github.com/grvermeulen\",\n        \"followers_url\": \"https://api.github.com/users/grvermeulen/followers\",\n        \"following_url\": \"https://api.github.com/users/grvermeulen/following{/other_user}\",\n        \"gists_url\": \"https://api.github.com/users/grvermeulen/gists{/gist_id}\",\n        \"starred_url\": \"https://api.github.com/users/grvermeulen/starred{/owner}{/repo}\",\n        \"subscriptions_url\": \"https://api.github.com/users/grvermeulen/subscriptions\",\n        \"organizations_url\": \"https://api.github.com/users/grvermeulen/orgs\",\n        \"repos_url\": \"https://api.github.com/users/grvermeulen/repos\",\n        \"events_url\": \"https://api.github.com/users/grvermeulen/events{/privacy}\",\n        \"received_events_url\": \"https://api.github.com/users/grvermeulen/received_events\",\n        \"type\": \"User\",\n        \"user_view_type\": \"public\",\n        \"site_admin\": false\n      }\n    },\n    \"headers\": {\n      \"host\": \"niceaitrial.app.n8n.cloud\",\n      \"user-agent\": \"GitHub-Hookshot/bde5943\",\n      \"content-length\": \"22459\",\n      \"accept\": \"*/*\",\n      \"accept-encoding\": \"gzip, br\",\n      \"cdn-loop\": \"cloudflare; loops=1; subreqs=1\",\n      \"cf-connecting-ip\": \"140.82.115.8\",\n      \"cf-ew-via\": \"15\",\n      \"cf-ipcountry\": \"US\",\n      \"cf-ray\": \"95f18f2b25515541-EWR\",\n      \"cf-visitor\": \"{\\\"scheme\\\":\\\"https\\\"}\",\n      \"cf-worker\": \"n8n.cloud\",\n      \"content-type\": \"application/json\",\n      \"x-forwarded-for\": \"140.82.115.8, 104.23.187.136\",\n      \"x-forwarded-host\": \"niceaitrial.app.n8n.cloud\",\n      \"x-forwarded-port\": \"443\",\n      \"x-forwarded-proto\": \"https\",\n      \"x-forwarded-server\": \"traefik-prod-users-gwc-82-6b58d578cf-fl6vd\",\n      \"x-github-delivery\": \"34b7ffb0-60bb-11f0-91c0-67249b191427\",\n      \"x-github-event\": \"pull_request\",\n      \"x-github-hook-id\": \"557956767\",\n      \"x-github-hook-installation-target-id\": \"1019107979\",\n      \"x-github-hook-installation-target-type\": \"repository\",\n      \"x-is-trusted\": \"yes\",\n      \"x-real-ip\": \"140.82.115.8\"\n    },\n    \"query\": {}\n  }\n]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        200
      ],
      "id": "019c7178-13fc-468f-9be8-5b24040f7856",
      "name": "Non Functional PR Mock"
    },
    {
      "parameters": {
        "jsCode": "const input = $input.all();\n// You received an array of items in a \"runOnceForAllItems\" mode\n// Each item must be returned as { json: ... }, where ... is the data for that item\nreturn input.map(item => {\n  return { json: item };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "ae55d737-1c40-4397-8550-e3e9b67a92e0",
      "name": "Functional PR Mock"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1220,
        200
      ],
      "id": "3dbd1035-e22e-4c3d-ad1b-b49509c115ed",
      "name": "Wait For Preview Environment",
      "webhookId": "e7581949-32a7-4f26-baf0-737a33a2341a"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "454e072a-eb00-47e6-a02e-855d6bfd54cd",
              "leftValue": "={{ $json[\"functional-pr\"] }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -220,
        100
      ],
      "id": "b9bd3d3e-5128-4028-9824-ecfa6be8b4e4",
      "name": "If"
    },
    {
      "parameters": {
        "toolDescription": "Makes an HTTP request and returns the response data.",
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1560,
        420
      ],
      "id": "0b490478-c01f-41c6-98b9-81ed4c0302a1",
      "name": "Get preview URL from comments",
      "retryOnFail": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1440,
        420
      ],
      "id": "5ec8582c-ad3c-4c79-8063-7914c4e34397",
      "name": "gpt-4.1",
      "credentials": {
        "openAiApi": {
          "id": "nGlWYU7xnOxVR0Gl",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "review",
        "owner": {
          "__rl": true,
          "value": "grvermeulen",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "CCS-demo",
          "mode": "name"
        },
        "pullRequestNumber": "={{ $json.output[\"pull-request-number\"] }}",
        "event": "comment",
        "body": "No functional changes, no testing required.",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1220,
        400
      ],
      "id": "34344479-fd0b-4391-9af1-9dd1c3bed20a",
      "name": "GitHub Comment",
      "webhookId": "37304c5a-87ff-4394-a0f6-3f7b130e46b4",
      "credentials": {
        "githubOAuth2Api": {
          "id": "6F53O8Zf3hJZijLr",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "review",
        "owner": {
          "__rl": true,
          "value": "grvermeulen",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "CCS-Demo",
          "mode": "list",
          "cachedResultName": "CCS-Demo",
          "cachedResultUrl": "https://github.com/grvermeulen/CCS-Demo"
        },
        "pullRequestNumber": "={{ $json.output[\"pull-request-number\"] }}",
        "event": "comment",
        "body": "=## Testcases\n\n{{\n  $json.output.testcases.map(\n    c => `**${c.title}**\\n${c.description}`\n  ).join('\\n\\n')\n}}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1220,
        0
      ],
      "id": "8ace04f1-f5b1-4f15-a4b2-7d55cf3868af",
      "name": "GitHub Testcases Comment",
      "webhookId": "99555e15-f7d4-4976-801e-d7e0d8a3dce3",
      "credentials": {
        "githubOAuth2Api": {
          "id": "6F53O8Zf3hJZijLr",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"preview-url\": {\n      \"type\": \"string\",\n      \"description\": \"URL for the preview environment where the tests were run.\"\n    },\n     \"pr-number\": {\n      \"type\": \"number\",\n      \"description\": \"Number of the pull request\"\n    },\n    \"success\": {\n      \"type\": \"boolean\",\n      \"description\": \"Overall status indicating if all test cases passed.\"\n    },\n    \"test-results\": {\n      \"type\": \"array\",\n      \"description\": \"An array of results for each individual test case.\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"The title of the test case this result refers to.\"\n          },\n          \"passed\": {\n            \"type\": \"boolean\",\n            \"description\": \"The status of the test case. 'true' indicates a pass, 'false' indicates a fail.\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A detailed description of the test result, such as an error message.\"\n          }\n        },\n        \"required\": [\n          \"title\",\n          \"passed\",\n          \"description\"\n        ]\n      }\n    }\n  },\n  \"required\": [\n    \"preview-url\",\n    \"pr-number\",\n    \"success\",\n    \"test-results\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2400,
        420
      ],
      "id": "725049cc-d1ef-4889-ab5d-e22df2c30bbb",
      "name": "Browser Agent Structured Output"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"needs-testing\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"description\": \"Indicates if the pull request needs testing.\"\n    },\n    \"pull-request-number\": {\n      \"type\": \"number\",\n      \"description\": \"The number of the pull request.\"\n    },\n    \"pull-request-comments-url\": {\n      \"type\": \"string\",\n      \"description\": \"The URL of the pull request comments.\"\n    },\n    \"testcases\": {\n      \"type\": \"array\",\n      \"description\": \"A list of test case objects.\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"The title of the test case.\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"The description of the test case.\"\n          }\n        },\n        \"required\": [\n          \"title\",\n          \"description\"\n        ]\n      }\n    }\n  },\n  \"required\": [\n    \"needs-testing\",\n    \"pull-request-number\",\n    \"pull-request-comments-url\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        800,
        420
      ],
      "id": "48e5e2bc-a911-4da6-8872-a9b50e1d6bd9",
      "name": "Testplan Agent Structured Output"
    },
    {
      "parameters": {
        "profileName": "={{ $json.profile_name }}",
        "additionalFields": {}
      },
      "id": "a090b5de-1a49-4126-a6d6-0e652388abcd",
      "name": "Session",
      "type": "n8n-nodes-base.airtop",
      "position": [
        -220,
        660
      ],
      "typeVersion": 1,
      "credentials": {
        "airtopApi": {
          "id": "0MjTw2ZDZK1LJ2pp",
          "name": "Airtop account"
        }
      }
    },
    {
      "parameters": {
        "resource": "window",
        "url": "={{ $('When Executed by Another Workflow').item.json.url }}",
        "getLiveView": true,
        "additionalFields": {}
      },
      "id": "8e8aff2e-d640-4454-ad72-5c64b914c216",
      "name": "Window",
      "type": "n8n-nodes-base.airtop",
      "position": [
        0,
        660
      ],
      "typeVersion": 1,
      "credentials": {
        "airtopApi": {
          "id": "0MjTw2ZDZK1LJ2pp",
          "name": "Airtop account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0a0680af-39bd-4bc7-b9cd-84c1766c79a1",
              "name": "sessionId",
              "type": "string",
              "value": "={{ $('Session').item.json.sessionId }}"
            },
            {
              "id": "13940ee8-c1d4-4718-a7b4-176c44c097b7",
              "name": "windowId",
              "type": "string",
              "value": "={{ $('Window').item.json.data.windowId }}"
            },
            {
              "id": "a0f2005c-2cd2-4a8d-891b-a4759b72a124",
              "name": "output",
              "type": "string",
              "value": "Session and window created successfully"
            },
            {
              "id": "a681af5f-57aa-4a8c-8264-3e87d5661bef",
              "name": "liveUrl",
              "value": "={{ $json.data.liveViewUrl }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fb1abbec-e826-48c3-a674-66b0e36ca89f",
      "name": "Return IDs",
      "type": "n8n-nodes-base.set",
      "position": [
        220,
        660
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "url"
            },
            {
              "name": "profile_name"
            }
          ]
        }
      },
      "id": "df434655-af20-4731-ae2c-7a6aa6acdc46",
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -440,
        660
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Click on any element in the window",
        "resource": "interaction",
        "sessionId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Session_ID', \"The `sessionId` returned by the `Create session` tool\", 'string') }}",
        "windowId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Window_ID', \"The `windowId` returned by the `Open window` tool\", 'string') }}",
        "elementDescription": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Element_Description', `Describe in detail the element to click on, e.g. The menu item \"about us\" at the top of the page`, 'string') }}",
        "additionalFields": {
          "waitForNavigation": "domcontentloaded"
        }
      },
      "id": "90394960-d96c-4d41-b2d1-2a3cc76cca07",
      "name": "Click",
      "type": "n8n-nodes-base.airtopTool",
      "position": [
        1800,
        420
      ],
      "typeVersion": 1,
      "credentials": {
        "airtopApi": {
          "id": "0MjTw2ZDZK1LJ2pp",
          "name": "Airtop account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Query the page, ask and extract information",
        "resource": "extraction",
        "operation": "query",
        "sessionId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Session_ID', \"The `sessionId` returned by the `Create session` tool\", 'string') }}",
        "windowId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Window_ID', \"The `windowId` returned by the `Open window` tool\", 'string') }}",
        "prompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt', `Ask anything and request to extract information from the current page, e.g. \"Is there any sign-up form? yes or no\"`, 'string') }}",
        "additionalFields": {}
      },
      "id": "ed159222-05fb-4f91-a8a4-98c2b2ef00ba",
      "name": "Query",
      "type": "n8n-nodes-base.airtopTool",
      "position": [
        1920,
        420
      ],
      "typeVersion": 1,
      "credentials": {
        "airtopApi": {
          "id": "0MjTw2ZDZK1LJ2pp",
          "name": "Airtop account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Load a URL into the browser window",
        "resource": "window",
        "operation": "load",
        "sessionId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Session_ID', \"The `sessionId` returned by the `Create session` tool\", 'string') }}",
        "windowId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Window_ID', \"The `windowId` returned by the `Open window` tool\", 'string') }}",
        "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('URL', ``, 'string') }}",
        "additionalFields": {}
      },
      "id": "ce4f245c-9ab5-4c19-8b76-84db768a28d8",
      "name": "Load URL",
      "type": "n8n-nodes-base.airtopTool",
      "position": [
        2040,
        420
      ],
      "typeVersion": 1,
      "credentials": {
        "airtopApi": {
          "id": "0MjTw2ZDZK1LJ2pp",
          "name": "Airtop account"
        }
      }
    },
    {
      "parameters": {
        "operation": "terminate",
        "sessionId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Session_ID', \"The `sessionId` returned by the `Create session` tool\", 'string') }}"
      },
      "id": "eb1a1a2e-ddb1-4d8e-b60c-14d16393dea4",
      "name": "End session",
      "type": "n8n-nodes-base.airtopTool",
      "position": [
        2160,
        420
      ],
      "typeVersion": 1,
      "credentials": {
        "airtopApi": {
          "id": "0MjTw2ZDZK1LJ2pp",
          "name": "Airtop account"
        }
      }
    },
    {
      "parameters": {
        "name": "Start_Browser",
        "description": "Start a new browser session and window",
        "workflowId": {
          "__rl": true,
          "value": "TgLcYrjGoLgP2PVo",
          "mode": "list",
          "cachedResultName": "Agentic PR Test"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('url', ``, 'string') }}",
            "profile_name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('profile_name', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "profile_name",
              "displayName": "profile_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "c4d89fe5-aab5-4bf0-9f18-4ec3b5606d80",
      "name": "Start browser",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        2280,
        420
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Type text into the page's element described",
        "resource": "interaction",
        "operation": "type",
        "sessionId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Session_ID', \"The `sessionId` returned by the `Create session` tool\", 'string') }}",
        "windowId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Window_ID', \"The `windowId` returned by the `Open window` tool\", 'string') }}",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
        "pressEnterKey": true,
        "elementDescription": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Element_Description', `Describe in detail the element to type into, e.g. The search box at the top of the page`, 'string') }}",
        "additionalFields": {}
      },
      "id": "8c99afda-e119-4253-9338-8f4c91cdac59",
      "name": "Type",
      "type": "n8n-nodes-base.airtopTool",
      "position": [
        1680,
        420
      ],
      "typeVersion": 1,
      "credentials": {
        "airtopApi": {
          "id": "0MjTw2ZDZK1LJ2pp",
          "name": "Airtop account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "review",
        "owner": {
          "__rl": true,
          "value": "grvermeulen",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "CCS-Demo",
          "mode": "list",
          "cachedResultName": "CCS-Demo",
          "cachedResultUrl": "https://github.com/grvermeulen/CCS-Demo"
        },
        "pullRequestNumber": "={{ $json.output[\"pr-number\"] }}",
        "event": "comment",
        "body": "=## Testcases Report\n\n{{ $json.output[\"test-results\"].map(item => `**${item.title}**\\n${item.description}`).join('\\n\\n')}}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        2500,
        200
      ],
      "id": "7f15e15c-0742-4c36-b308-d319c8a2ed2f",
      "name": "GitHub Results Comment",
      "webhookId": "99555e15-f7d4-4976-801e-d7e0d8a3dce3",
      "credentials": {
        "githubOAuth2Api": {
          "id": "6F53O8Zf3hJZijLr",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        440,
        420
      ],
      "id": "cf60ef4e-ff83-4afb-ac67-3949e4a7e798",
      "name": "gpt-4.",
      "credentials": {
        "openAiApi": {
          "id": "nGlWYU7xnOxVR0Gl",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Testplan Agent": {
      "main": [
        [
          {
            "node": "Needs testing?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Github Trigger": {
      "main": [
        [
          {
            "node": "Prepare Testplan Agent Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request File Diffs": {
      "ai_tool": [
        [
          {
            "node": "Testplan Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Trigger Mock": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Testplan Agent Input": {
      "main": [
        [
          {
            "node": "Testplan Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Issue": {
      "ai_tool": [
        [
          {
            "node": "Testplan Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Non Functional PR Mock": {
      "main": [
        [
          {
            "node": "Prepare Testplan Agent Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Functional PR Mock": {
      "main": [
        [
          {
            "node": "Prepare Testplan Agent Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Needs testing?": {
      "main": [
        [
          {
            "node": "GitHub Testcases Comment",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Preview Environment",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "GitHub Comment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Functional PR Mock",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Non Functional PR Mock",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get preview URL from comments": {
      "ai_tool": [
        [
          {
            "node": "Browser Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Preview Environment": {
      "main": [
        [
          {
            "node": "Browser Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Browser Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Browser Agent Structured Output": {
      "ai_outputParser": [
        [
          {
            "node": "Browser Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Testplan Agent Structured Output": {
      "ai_outputParser": [
        [
          {
            "node": "Testplan Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Window": {
      "main": [
        [
          {
            "node": "Return IDs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Session": {
      "main": [
        [
          {
            "node": "Window",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Click": {
      "ai_tool": [
        [
          {
            "node": "Browser Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Query": {
      "ai_tool": [
        [
          {
            "node": "Browser Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Load URL": {
      "ai_tool": [
        [
          {
            "node": "Browser Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "End session": {
      "ai_tool": [
        [
          {
            "node": "Browser Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Start browser": {
      "ai_tool": [
        [
          {
            "node": "Browser Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Type": {
      "ai_tool": [
        [
          {
            "node": "Browser Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Browser Agent": {
      "main": [
        [
          {
            "node": "GitHub Results Comment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4.": {
      "ai_languageModel": [
        [
          {
            "node": "Testplan Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bac1501b-7857-427b-9291-e4ad5a99bb82",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a36736785ff6feaa149030b541a416b7b35cffd670f049fe714764d6d0fcdb69"
  },
  "id": "TgLcYrjGoLgP2PVo",
  "tags": []
}